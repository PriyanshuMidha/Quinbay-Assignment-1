import java.util.*;
class Solution {
    
    public static boolean isBalanced(String expression) {
        Stack<Character> stack = new Stack<>();
        
        // Iterate over each character in the string
        for (char ch : expression.toCharArray()) {
            // If it's an opening bracket, push it onto the stack
            if (ch == '(' || ch == '{' || ch == '[') {
                stack.push(ch);
            }
            // If it's a closing bracket, check for matching opening bracket
            else if (ch == ')' || ch == '}' || ch == ']') {
                // If stack is empty or brackets don't match, return false
                if (stack.isEmpty()) return false;
                
                char top = stack.pop();
                if ((ch == ')' && top != '(') || 
                    (ch == '}' && top != '{') || 
                    (ch == ']' && top != '[')) {
                    return false;
                }
            }
        }
        // If stack is empty, all brackets matched correctly
        return stack.isEmpty();
    }

    public static void main(String []argh) {
        Scanner sc = new Scanner(System.in);
        
        while (sc.hasNext()) {
            String input = sc.next();
            // Print true if balanced, false otherwise
            System.out.println(isBalanced(input));
        }
        sc.close();
    }
}
